#!/bin/bash
echo "====> bootstrap-token.csv"
echo "`openssl rand -hex 3`.`openssl rand -hex 8`,kubelet-bootstrap,10001,"system:kubelet-bootstrap"" > ${PKI_DIR}/bootstrap-token.csv
echo ""

${K8S_BIN_DIR}/kubectl config set-cluster bootstrap \
--server='https://kube-apiserver:6443' \
--certificate-authority=${PKI_DIR}/k8s-ca.pem \
--embed-certs=true \
--kubeconfig=${PKI_DIR}/bootstrap.kubeconfig



${K8S_BIN_DIR}/kubectl config set-credentials kubelet-bootstrap \
--token=`cut -d ',' -f1 ${PKI_DIR}/bootstrap-token.csv` \
--kubeconfig=${PKI_DIR}/bootstrap.kubeconfig


${K8S_BIN_DIR}/kubectl config  set-context bootstrap \
--user=kubelet-bootstrap \
--cluster=bootstrap \
--kubeconfig=${PKI_DIR}/bootstrap.kubeconfig

${K8S_BIN_DIR}/kubectl config use-context bootstrap --kubeconfig=${PKI_DIR}/bootstrap.kubeconfig



cat <<EOF | tee ${MANIFEST_DIR}/bootstrap.yaml
# https://kubernetes.io/zh-cn/docs/reference/access-authn-authz/kubelet-tls-bootstrapping/#approval

apiVersion: v1
kind: Secret
metadata:
  name: bootstrap-token-`awk -F '[,.]' '{print $1}' ${PKI_DIR}/bootstrap-token.csv`
  namespace: kube-system
type: bootstrap.kubernetes.io/token
stringData:
  description: "The default bootstrap token generated by 'kubelet '."
  token-id: `awk -F '[,.]' '{print $1}' ${PKI_DIR}/bootstrap-token.csv`
  token-secret: `awk -F '[,.]' '{print $2}' ${PKI_DIR}/bootstrap-token.csv`
  usage-bootstrap-authentication: "true"
  usage-bootstrap-signing: "true"
  auth-extra-groups:  system:bootstrappers:default-node-token,system:bootstrappers:worker,system:bootstrappers:ingress


# 允许启动引导节点创建 CSR
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: create-csrs-for-bootstrapping
subjects:
- kind: Group
  name: system:bootstrappers
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: system:node-bootstrapper
  apiGroup: rbac.authorization.k8s.io

---
# 批复 "system:bootstrappers" 组的所有 CSR
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auto-approve-csrs-for-group
subjects:
- kind: Group
  name: system:bootstrappers
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
  apiGroup: rbac.authorization.k8s.io

---
# 批复 "system:nodes" 组的 CSR 续约请求
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: auto-approve-renewals-for-nodes
subjects:
- kind: Group
  name: system:nodes
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
  apiGroup: rbac.authorization.k8s.io
EOF